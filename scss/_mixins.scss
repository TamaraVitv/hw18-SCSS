@use "sass:math";
@use "sass:string";
@use "sass:map";

@function rem($sizeInPx) {
  $remSize: math.div($sizeInPx, 16px);
  @return #{$remSize}rem;
}

@mixin text(
  $font-size: 16px,
  $font-weight: 400,
  $color: black,
  $line-height: initial
) {
  font-weight: $font-weight;
  color: $color;

  @if (string.index(#{$font-size}, "px")) {
    font-size: rem($font-size);
  } @else {
    font-size: $font-size;
  }

  @if (string.index(#{$line-height}, "px")) {
    line-height: rem($line-height);
  } @else {
    line-height: $line-height;
  }
}

$breakpoints: (
  "mobile": 768px,
  "desktop": 1024px,
  "hd": 1240px,
  "fullhd": 1440px,
);

@mixin media($screen) {
  @if (string.index(#{$screen}, "px")) {
    @media screen and (min-width: #{$screen}) {
      @content;
    }
  } @else {
    @media screen and (min-width: map.get($breakpoints, $screen)) {
      @content;
    }
  }
}
@mixin padding-hack($padding: 50%, $size: contain, $dev: false) {
  position: relative;
  height: 0;
  padding-bottom: $padding;
  @if $dev {
    background-color: rgba(255, 0, 0, 0.555);
  }

  img {
    position: absolute;
    left: 0;
    right: 0;
    top: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    object-position: center;
    object-fit: $size;
    // options here:  contain, fill, fit!!!
    // if $dev true -> red bg! if false â€“> np bg
    @if $dev {
      object-fit: contain;
    }
  }
}
